version: "3.9"

services:
  app:
    build: .
    container_name: blog-api
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - redis
      - elasticsearch
    environment:
      - MONGO_URI=mongodb://mongo:27017/blog
      - REDIS_HOST=redis://redis:6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    networks:
      - app-network
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  redis:
    image: redis:6.2.6
    container_name: redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - ./redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - app-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
